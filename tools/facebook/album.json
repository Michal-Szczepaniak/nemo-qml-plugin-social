{
    "methods": [
        {
            "doc": "Initiates a \"like\" operation on the album.\n\nIf the network request was started successfully, the function\nwill return true and the status of the album will change to\n\\c SocialNetwork::Busy.  Otherwise, the function will return\nfalse.",
            "name": "like",
            "parameters": []
        },
        {
            "doc": "Initiates a \"delete like\" operation on the album.\n\nIf the network request was started successfully, the function\nwill return true and the status of the album will change to\n\\c SocialNetwork::Busy.  Otherwise, the function will return\nfalse.",
            "name": "unlike",
            "parameters": []
        },
        {
            "doc": "Initiates a \"post comment\" operation on the album.  The comment\nwill contain the specified \\a message.\n\nIf the network request was started successfully, the function\nwill return true and the status of the album will change to\n\\c SocialNetwork::Busy.  Otherwise, the function will return\nfalse.\n\nOnce the network request completes, the \\c responseReceived()\nsignal will be emitted.  The \\c data parameter of the signal\nwill contain the \\c id of the newly uploaded comment.",
            "name": "uploadComment",
            "parameters": [
                {
                    "is_const": true,
                    "is_reference": true,
                    "type": "QString",
                    "name": "message"
                }
            ]
        },
        {
            "doc": "Initiates a \"delete comment\" operation on the comment specified by\nthe given \\a identifier.\n\nIf the network request was started successfully, the function\nwill return true and the status of the album will change to\n\\c SocialNetwork::Busy.  Otherwise, the function will return\nfalse.",
            "name": "removeComment",
            "parameters": [
                {
                    "is_const": true,
                    "is_reference": true,
                    "type": "QString",
                    "name": "commentIdentifier"
                }
            ]
        },
        {
            "doc": "Initiates a \"post photo\" operation on the album.  The photo will\nbe loaded from the local filesystem and uploaded to Facebook with\nits caption set to the given \\a message.\n\nIf the network request was started successfully, the function\nwill return true and the status of the album will change to\n\\c SocialNetwork::Busy.  Otherwise, the function will return\nfalse.\n\nOnce the network request completes, the \\c responseReceived()\nsignal will be emitted.  The \\c data parameter of the signal\nwill contain the \\c id of the newly uploaded photo.\n",
            "name": "uploadPhoto",
            "parameters": [
                {
                    "is_const": true,
                    "is_reference": true,
                    "type": "QUrl",
                    "name": "source"
                },
                {
                    "default": "QString()",
                    "is_const": true,
                    "is_reference": true,
                    "type": "QString",
                    "name": "message"
                }
            ]
        },
        {
            "doc": "Initiates a \"delete photo\" operation on the photo specified by\nthe given \\a identifier.\n\nIf the network request was started successfully, the function\nwill return true and the status of the album will change to\n\\c SocialNetwork::Busy.  Otherwise, the function will return\nfalse.",
            "name": "removePhoto",
            "parameters": [
                {
                    "is_const": true,
                    "is_reference": true,
                    "type": "QString",
                    "name": "photoIdentifier"
                }
            ]
        }
    ],
    "identifiable": true,
    "doc": "\\inqmlmodule org.nemomobile.social 1\n\\brief A FacebookAlbum represents an album from the Facebook OpenGraph API\n\nFacebookAlbum is a specialized IdentifiableContentItem that is used\nto hold data that represents an album in the Facebook OpenGraph API.\n\n\\sa{IdentifiableContentItem}\n",
    "properties": [
        {
            "doc": "Holds a reference to the user or profile which created the album.",
            "is_pointer": true,
            "name": "from",
            "type": "FacebookObjectReferenceInterface"
        },
        {
            "doc": "Holds the name of the album.",
            "type": "QString",
            "name": "name"
        },
        {
            "doc": "Holds the description of the album.",
            "type": "QString",
            "name": "description"
        },
        {
            "doc": "Holds a link to the album.",
            "type": "QUrl",
            "name": "link"
        },
        {
            "doc": "Holds a link to the cover photo of an album.",
            "type": "QUrl",
            "name": "cover_photo"
        },
        {
            "doc": "Holds the privacy setting of the album.",
            "type": "QString",
            "name": "privacy"
        },
        {
            "doc": "Holds the count of the number of photos in the album.",
            "type": "int",
            "name": "count"
        },
        {
            "doc": "Holds the type of the album. The albumType can be one of:\n\\list\n\\li FacebookAlbum.Album\n\\li FacebookAlbum.Normal\n\\li FacebookAlbum.Wall\n\\li FacebookAlbum.Profile\n\\li FacebookAlbum.Mobile\n\\endlist.",
            "type": "FacebookAlbumInterface::AlbumType",
            "name": "type",
            "custom": true
        },
        {
            "doc": "Holds the creation time of the album in an ISO8601-formatted string.",
            "type": "QString",
            "name": "created_time"
        },
        {
            "doc": "Holds the last-update time of the album in an ISO8601-formatted string.",
            "type": "QString",
            "name": "updated_time"
        },
        {
            "doc": "Whether the current user can upload photos to the album.",
            "type": "bool",
            "name": "can_upload"
        },
        {
            "doc": "Whether the album has been liked by the current user.",
            "is_ontology": false,
            "type": "bool",
            "name": "liked",
            "custom": true
        },
        {
            "doc": "The number of likes on this album.",
            "is_ontology": false,
            "type": "int",
            "name": "likes_count",
            "custom": true
        },
        {
            "doc": "The number of likes on this album.",
            "is_ontology": false,
            "type": "int",
            "name": "comments_count",
            "custom": true
        }
    ],
    "extra_public": "enum AlbumType {\n    Album,\n    Normal,\n    Wall,\n    Profile,\n    Mobile\n};\nQ_ENUMS(AlbumType)",
    "name": "album"
}